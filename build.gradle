plugins {
    id 'java'
}

group = 'au.nagasonic'
version = '1.2'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "citizens-repo"
        url = "https://maven.citizensnpcs.co/repo"
    }
    maven {
        url 'https://repo.skriptlang.org/releases'
    }
}

dependencies {
    //SpigotAPI
    compileOnly "org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT"
    //Citizens
    implementation "net.citizensnpcs:citizens-main:2.0.37-SNAPSHOT"
    //JSON
    implementation group: 'org.json', name: 'json', version: '20090211'
    //Skript
    implementation 'com.github.SkriptLang:Skript:2.9.5'
    //JetBrains Annotations
    implementation group: 'org.jetbrains', name: 'annotations', version: '26.0.1'
    //bStats
    implementation group: 'org.bstats', name: 'bstats-bukkit', version: '3.1.0'
    //Commons IO
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
