import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-rc1'
}

group = 'au.nagasonic'
version = "1.2.4-b1-fixed"

def latestJava = 21
def oldestJava = 17

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "citizens-repo"
        url = "https://maven.citizensnpcs.co/repo"
    }
    maven {
        url = 'https://repo.skriptlang.org/releases'
    }
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    //Citizens
    implementation('net.citizensnpcs:citizens-main:2.0.39-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    //Skript
    compileOnly "com.github.SkriptLang:Skript:2.11.2"
    //JetBrains Annotations
    implementation group: 'org.jetbrains', name: 'annotations', version: '26.0.1'
    //Commons IO
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    //Paper
    compileOnly("io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    filter ReplaceTokens, tokens: ["version": project.version]
}

